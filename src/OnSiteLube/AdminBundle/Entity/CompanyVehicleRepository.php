<?php

  namespace OnSiteLube\AdminBundle\Entity;

  use Doctrine\ORM\EntityRepository;

  /**
   * CompanyVehicleRepository
   *
   * This class was generated by the Doctrine ORM. Add your own custom
   * repository methods below.
   */
  class CompanyVehicleRepository extends EntityRepository {


    /**
     * @return array
     */
    public function findAll() {
      $dql = "SELECT cv.id, cv.unitNumber, cl.name, a.address FROM OnSiteLubeAdminBundle:CompanyVehicle cv join cv.companyLocation cl join cl.address a";
      $query = $this->getEntityManager()->createQuery($dql);
      return $query->getResult();
    }

    /**
     * @param $locationId
     *
     * @return array
     */
    public function findAllByLocationId($locationId) {
      $dql = "SELECT cv.id, cv.unitNumber, cl.name, a.address FROM OnSiteLubeAdminBundle:CompanyVehicle cv join cv.companyLocation cl join cl.address a where cl.id = :locationId";
      $query = $this->getEntityManager()->createQuery($dql)
          ->setParameters(array('locationId' => $locationId));
      return $query->getResult();
    }

    /**
     * @param $id
     *
     * @return array
     */
    public function findById($id) {
      $dql  = "SELECT v.id as vehicleId, v.unitNumber, v.vin, v.tag, v.year, v.make, v.model, l.id as locationId, l.name as locationName ";
      $dql .= "FROM OnSiteLubeAdminBundle:CompanyVehicle v join v.companyLocation l ";
      $dql .= "where v.id = :vehicleId";
      $query = $this->getEntityManager()->createQuery($dql)
          ->setParameters(array('vehicleId' => $id));
      return $query->getResult();
    }

    /**
     * @param $input
     *
     * @return CompanyVehicle
     */
    public function addCompanyVehicle($input) {
      $em = $this->getEntityManager();

      $companyVehicle = new CompanyVehicle();
      $companyLocation = $em->getRepository('OnSiteLubeAdminBundle:CompanyLocation')->find($input->vehicleLocation);

      $companyVehicle->setUnitNumber($input->unitNumber);
      $companyVehicle->setVIN($input->vin);
      $companyVehicle->setTag($input->tag);
      $companyVehicle->setYear($input->year);
      $companyVehicle->setMake($input->make);
      $companyVehicle->setModel($input->model);
      $companyVehicle->setCompanyLocation($companyLocation);
      $em->persist($companyVehicle);

      $em->flush();

      return $companyVehicle;
    }

    /**
     * @param $input
     *
     * @return null|object
     */
    public function updateCompanyVehicle($input) {
      $em = $this->getEntityManager();

      $companyVehicle = $em->getRepository('OnSiteLubeAdminBundle:CompanyVehicle')->find($input->vehicleId);
      $companyLocation = $em->getRepository('OnSiteLubeAdminBundle:CompanyLocation')->find($input->vehicleLocation);

      $companyVehicle->setUnitNumber($input->unitNumber);
      $companyVehicle->setVIN($input->vin);
      $companyVehicle->setTag($input->tag);
      $companyVehicle->setYear($input->year);
      $companyVehicle->setMake($input->make);
      $companyVehicle->setModel($input->model);
      $companyVehicle->setCompanyLocation($companyLocation);
      $em->persist($companyVehicle);

      $em->flush();

      return $companyLocation;
    }

    /**
     * @return array
     */
    public function findAllForAutoComplete() {
      $dql  = "SELECT cv.id as vehicleId, cv.unitNumber ";
      $dql .= "FROM OnSiteLubeAdminBundle:CompanyVehicle cv";
      $query = $this->getEntityManager()->createQuery($dql);
      return $query->getResult();
    }


    /**
     * @param $service
     *
     * @return object
     */
    public static function findRepository($service) {
      return $service->getDoctrine()->getRepository('OnSiteLubeAdminBundle:CompanyVehicle');
    }


  }
