<?php

namespace OnSiteLube\AdminBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * WorkOrderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WorkOrderRepository extends EntityRepository {

  /**
   * @param $id
   * @return array
   */
  public function findAllWorkOrderByEmployeeId($id) {
    $dql   = "select e.id as employeeId, js.id as jobServiceId, js.name as jobService, js.hours, js.billable, ";
    $dql  .= "wo.id as workOrderId, wo.serviceDate, wo.serviceTime, c.name as customer, v.unitNumber, cl.name as location ";
    $dql  .= "from OnSiteLubeAdminBundle:Employee e join e.jobServices js ";
    $dql  .= "join js.workOrder wo join wo.customer c join js.vehicle v join wo.customerLocation cl ";
    $dql  .= "where e.id = :employeeId group by wo.id";
    $query = $this->getEntityManager()->createQuery($dql)->setParameters(array('employeeId' => $id));
    return $query->getResult();
  }

  /**
   * @param $id
   * @return array
   */
  public function findAllWorkOrderByEmployeeIdCurrentDay($id) {
    $dql   = "select e.id as employeeId, ";
    $dql  .= "wo.id as workOrderId, wo.serviceDate, wo.serviceTime, c.name as customer, cl.name as location ";
    $dql  .= "from OnSiteLubeAdminBundle:Employee e join e.jobServices js ";
    $dql  .= "join js.workOrder wo join wo.customer c join js.vehicle v join wo.customerLocation cl ";
    $dql  .= "where e.id = :employeeId and wo.serviceDate = :serviceDate group by wo.id";
    $query = $this->getEntityManager()->createQuery($dql)->setParameters(array('employeeId' => $id, 'serviceDate' => date("Y-m-d")));
    return $query->getResult();
  }

  /**
   * @param $id
   * @return array
   */
  public function findWorkOrderByWorkOrderId($id) {
    $dql  = "select e.id as employeeId, js.id as jobServiceId, js.name as jobServiceName, js.hours, js.billable, ";
    $dql .= "wo.id as workOrderId, wo.serviceDate, wo.serviceTime, c.name as customer, c.phone, v.unitNumber, ";
    $dql .= "cl.name as location, a.address, a.city, a.state, a.postalCode ";
    $dql .= "from OnSiteLubeAdminBundle:Employee e ";
    $dql .= "join e.jobServices js join js.workOrder wo join wo.customer c join js.vehicle v join wo.customerLocation cl join c.address a ";
    $dql .= "where wo.id = :workOrderId";
    $query = $this->getEntityManager()->createQuery($dql)->setParameters(array('workOrderId' => $id));
    return $query->getResult();
  }

  /**
   * @param $service
   *
   * @return object
   */
  public static function findRepository($service) {
    return $service->getDoctrine()->getRepository('OnSiteLubeAdminBundle:WorkOrder');
  }
}
